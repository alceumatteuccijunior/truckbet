{"version":3,"sources":["LoginPage.js","Dashboard.js","RegisterPage.js","HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","email","setEmail","useState","password","setPassword","erro","setErro","React","createElement","className","onSubmit","async","e","preventDefault","res","fetch","method","headers","Content-Type","body","JSON","stringify","ok","data","json","localStorage","setItem","token","window","location","href","type","placeholder","value","onChange","target","required","Dashboard","bets","setBets","apostas","setApostas","user","setUser","useEffect","axios","get","then","response","catch","error","console","Authorization","concat","getItem","style","color","parseFloat","saldo","toFixed","length","map","bet","key","id","race","nome","race_participant","driver","odd","valor_odd","handleValorChange","valor","prev","_objectSpread","[object Object]","calcularRetorno","isNaN","onClick","betId","alert","apostar","RegisterPage","form","setForm","name","password_confirmation","handleChange","padding","HomePage","Link","to","marginRight","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ea481d0b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport React from 'react';\n\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [erro, setErro] = useState('');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    const res = await fetch('https://truckbet.vip/truck-api/public/api/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password })\n    });\n\n    if (!res.ok) {\n      setErro(\"Login inválido\");\n      return;\n    }\n\n    const data = await res.json();\n    localStorage.setItem('token', data.token);\n    window.location.href = '/dashboard';\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <form onSubmit={handleLogin} className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 w-full max-w-md\">\n        <h2 className=\"text-2xl font-bold mb-6 text-center\">Login</h2>\n\n        <input\n          type=\"email\"\n          placeholder=\"E-mail\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          className=\"mb-4 w-full px-3 py-2 border rounded\"\n          required\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"Senha\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          className=\"mb-4 w-full px-3 py-2 border rounded\"\n          required\n        />\n\n        {erro && <p className=\"text-red-500 text-sm mb-4\">{erro}</p>}\n\n        <button type=\"submit\" className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded\">\n          Entrar\n        </button>\n\n        <p className=\"mt-4 text-center text-sm\">\n          Ainda não tem conta? <a href=\"/register\" className=\"text-blue-600 underline\">Registrar</a>\n        </p>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Dashboard() {\n  const [bets, setBets] = useState([]);\n  const [apostas, setApostas] = useState({});\n  const [user, setUser] = useState(null);\n  const [erro, setErro] = useState(null);\n\n  useEffect(() => {\n    axios.get('https://truckbet.vip/truck-api/public/api/bets')\n      .then(response => setBets(response.data))\n      .catch(error => console.error('Erro ao buscar apostas: ', error));\n\n    axios.get('http://127.0.0.1:8000/api/me', {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}` // ajuste se necessário\n      }\n    })\n      .then(response => setUser(response.data))\n      .catch(error => console.error('Erro ao buscar usuário: ', error));\n  }, []);\n\n  const handleValorChange = (id, valor) => {\n    setErro(null);\n    setApostas(prev => ({\n      ...prev,\n      [id]: valor\n    }));\n  };\n\n  const calcularRetorno = (valor, odd) => {\n    if (!valor || isNaN(valor)) return 0;\n    return (parseFloat(valor) * parseFloat(odd)).toFixed(2);\n  };\n\n  const apostar = (betId) => {\n    const valor = parseFloat(apostas[betId]);\n    if (!valor || isNaN(valor)) {\n      alert(\"Digite um valor válido para apostar\");\n      return;\n    }\n\n    if (user && valor > user.saldo) {\n      setErro(\"Saldo insuficiente para essa aposta.\");\n      return;\n    }\n\n    // Em breve: chamada POST /realizar-aposta\n    alert(`Aposta de R$${valor.toFixed(2)} realizada!`);\n  };\n\n  return (\n    <div>\n      <h1>Apostas Disponíveis</h1>\n      {erro && <div style={{ color: 'red' }}>{erro}</div>}\n      {user && <p>Saldo disponível: <strong>R$ {parseFloat(user.saldo).toFixed(2)}</strong></p>}\n      {bets.length === 0 ? (\n        <p>Nenhuma aposta disponível</p>\n      ) : (\n        <table>\n          <thead>\n            <tr>\n              <th>Corrida</th>\n              <th>Piloto</th>\n              <th>Odd</th>\n              <th>Valor</th>\n              <th>Retorno</th>\n              <th>Ação</th>\n            </tr>\n          </thead>\n          <tbody>\n            {bets.map(bet => (\n              <tr key={bet.id}>\n                <td>{bet.race.nome}</td>\n                <td>{bet.race_participant.driver.nome}</td>\n                <td>{bet.odd.valor_odd}</td>\n                <td>\n                  <input\n                    type=\"number\"\n                    value={apostas[bet.id] || ''}\n                    onChange={(e) => handleValorChange(bet.id, e.target.value)}\n                    placeholder=\"Valor\"\n                  />\n                </td>\n                <td>R$ {calcularRetorno(apostas[bet.id], bet.odd.valor_odd)}</td>\n                <td>\n                  <button onClick={() => apostar(bet.id)}>Apostar</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import { useState } from 'react';\nimport React from 'react';\n\n\nfunction RegisterPage() {\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password_confirmation: ''\n  });\n  const [erro, setErro] = useState('');\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    const res = await fetch('https://truckbet.vip/truck-api/public/api/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(form)\n    });\n\n    if (!res.ok) {\n      setErro('Erro ao registrar');\n      return;\n    }\n\n    const data = await res.json();\n    localStorage.setItem('token', data.token);\n    window.location.href = '/dashboard';\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Registro</h1>\n      <form onSubmit={handleRegister}>\n        <input type=\"text\" name=\"name\" placeholder=\"Nome\" value={form.name} onChange={handleChange} /><br />\n        <input type=\"email\" name=\"email\" placeholder=\"E-mail\" value={form.email} onChange={handleChange} /><br />\n        <input type=\"password\" name=\"password\" placeholder=\"Senha\" value={form.password} onChange={handleChange} /><br />\n        <input type=\"password\" name=\"password_confirmation\" placeholder=\"Confirmar Senha\" value={form.password_confirmation} onChange={handleChange} /><br />\n        <button type=\"submit\">Registrar</button>\n      </form>\n      {erro && <p style={{ color: 'red' }}>{erro}</p>}\n    </div>\n  );\n}\n\nexport default RegisterPage;\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\n\nfunction HomePage() {\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Bem-vindo à aplicação</h1>\n      <Link to=\"/login\"><button style={{ marginRight: 10 }}>Login</button></Link>\n      <Link to=\"/register\"><button>Registrar</button></Link>\n    </div>\n  );\n}\nexport default HomePage;","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport Dashboard from './Dashboard';\nimport RegisterPage from './RegisterPage';\nimport HomePage from './HomePage';\nimport React from 'react';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/login\" element={<LoginPage />} />  \n        <Route path=\"/register\" element={<RegisterPage />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}